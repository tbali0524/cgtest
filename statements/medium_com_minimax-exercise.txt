Minimax exercise

https://www.codingame.com/training/medium/medium_com_minimax-exercise
https://www.codingame.com/contribute/view/92664790e2fcaedac33b01752716d889f7d

A contribution by aCat

Difficulty: Medium
Topic: Minimax algorithm, Alphaâ€“beta pruning, Zero-sum games, Negamax

We are given a 2-player, zero-sum game, where players alternate turns. The game always lasts [[D]] turns, and during its move, every player has to choose from [[B]] choices. Thus, [[D]] is the game tree depth, [[B]] its branching factor, and depending on players' choices, the game has [[B^D]] possible outcomes.

Assuming the game tree is small enough, we can check all outcomes and solve the game (i.e. compute the best strategy for every player) using the Minimax algorithm ( https://en.wikipedia.org/wiki/Minimax ).

To make our algorithm more efficient, we can skip some computations using the alpha-beta prunning technique ( https://en.wikipedia.org/wiki/Alpha-beta_pruning ).


Your task is to compute the minimum gain for the first player using Minimax with alpha-beta cutoffs. Moves should be examined in left-to-right order, as provided in the input.

Difficulty
Medium

Tags
Minimax
